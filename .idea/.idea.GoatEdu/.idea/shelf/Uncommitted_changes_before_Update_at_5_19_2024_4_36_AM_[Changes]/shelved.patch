Index: GoatEdu.API/Program.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>using System.Text;\r\nusing GoatEdu.Core.Interfaces;\r\nusing GoatEdu.Core.Interfaces.GenericInterfaces;\r\nusing GoatEdu.Core.Interfaces.RoleInterfaces;\r\nusing GoatEdu.Core.Interfaces.Security;\r\nusing GoatEdu.Core.Interfaces.UserInterfaces;\r\nusing GoatEdu.Core.Services;\r\nusing Infrastructure.Data;\r\nusing Infrastructure.Repositories;\r\nusing Microsoft.AspNetCore.Authentication.JwtBearer;\r\nusing Microsoft.EntityFrameworkCore;\r\nusing Microsoft.IdentityModel.Tokens;\r\nusing Microsoft.OpenApi.Models;\r\n\r\n\r\nvar builder = WebApplication.CreateBuilder(args);\r\nConfigurationManager configuration = builder.Configuration;\r\n\r\nbuilder.Services.AddDbContext<GoatEduContext>(options =>\r\n    options.UseNpgsql(builder.Configuration.GetConnectionString(\"DefaultConnection\")));\r\nbuilder.Services.AddCors();\r\nbuilder.Services.AddScoped<IUserRepository, UserRepository>();\r\nbuilder.Services.AddScoped<IUserService, UserService>();\r\nbuilder.Services.AddScoped<IUnitOfWork, UnitOfWork>();\r\nbuilder.Services.AddScoped<IRoleRepository, RoleRepository>();\r\n\r\n\r\nbuilder.Services.AddScoped<JWTGenerator, JWTConfig>();\r\n\r\nbuilder.Services.AddScoped(typeof(IRepository<>), typeof(BaseRepository<>));\r\n\r\nbuilder.Services.AddControllers();\r\n// builder.Services.AddAuthentication().AddGoogle(googleOptions =>\r\n// {\r\n//     googleOptions.ClientId = configuration[\"Authentication:Google:ClientId\"];\r\n//     googleOptions.ClientSecret = configuration[\"Authentication:Google:ClientSecret\"];\r\n// });\r\n\r\nbuilder.Services.AddAuthentication(opt =>\r\n{\r\n    opt.DefaultAuthenticateScheme = JwtBearerDefaults.AuthenticationScheme;\r\n    opt.DefaultChallengeScheme = JwtBearerDefaults.AuthenticationScheme;\r\n    opt.DefaultScheme = JwtBearerDefaults.AuthenticationScheme;\r\n}).AddJwtBearer(options =>\r\n{\r\n    options.TokenValidationParameters = new TokenValidationParameters\r\n    {\r\n        ValidIssuer = builder.Configuration[\"JWTSetting:ValidIssuer\"],\r\n        ValidAudience = builder.Configuration[\"JWTSetting:ValidAudience\"],\r\n        IssuerSigningKey = new SymmetricSecurityKey(Encoding.UTF8.GetBytes(builder.Configuration[\"JWTSetting:SecurityKey\"])),\r\n        ValidateIssuer = true,\r\n        ValidateAudience = true,\r\n        ValidateLifetime = true,\r\n        ValidateIssuerSigningKey = true,\r\n        RequireExpirationTime = true\r\n    };\r\n    options.Events = new JwtBearerEvents\r\n    {\r\n        OnAuthenticationFailed = context =>\r\n        {\r\n            var logger = context.HttpContext.RequestServices.GetRequiredService<ILogger<Program>>();\r\n            logger.LogError(\"Authentication failed: {0}\", context.Exception.Message);\r\n            return Task.CompletedTask;\r\n        },\r\n        OnTokenValidated = context =>\r\n        {\r\n            var logger = context.HttpContext.RequestServices.GetRequiredService<ILogger<Program>>();\r\n            logger.LogInformation(\"Token validated for user: {0}\", context.Principal.Identity.Name);\r\n            return Task.CompletedTask;\r\n        }\r\n    };\r\n});\r\n\r\nbuilder.Services.AddEndpointsApiExplorer();\r\nbuilder.Services.AddSwaggerGen(option =>\r\n{\r\n    option.SwaggerDoc(\"v1\", new OpenApiInfo { Title = \"GoatEdu API\", Version = \"v1\" });\r\n    option.AddSecurityDefinition(\"Bearer\", new OpenApiSecurityScheme\r\n    {\r\n        In = ParameterLocation.Header,\r\n        Description = \"Please enter a valid token\",\r\n        Name = \"Authorization\",\r\n        Type = SecuritySchemeType.Http,\r\n        BearerFormat = \"JWT\",\r\n        Scheme = \"Bearer\"\r\n    });\r\n    option.AddSecurityRequirement(new OpenApiSecurityRequirement\r\n    {\r\n        {\r\n            new OpenApiSecurityScheme\r\n            {\r\n                Reference = new OpenApiReference\r\n                {\r\n                    Type=ReferenceType.SecurityScheme,\r\n                    Id=\"Bearer\"\r\n                }\r\n            },\r\n            new string[]{}\r\n        }\r\n    });\r\n});\r\n\r\nvar app = builder.Build();\r\n\r\n\r\nif (app.Environment.IsDevelopment())\r\n{\r\n    app.UseSwagger();\r\n    app.UseSwaggerUI();\r\n}\r\napp.UseCors(builder =>\r\n{\r\n    builder.AllowAnyOrigin()\r\n        .AllowAnyMethod()\r\n        .AllowAnyHeader();\r\n});\r\napp.UseHttpsRedirection();\r\n\r\napp.UseAuthentication(); // Ensure this is before UseAuthorization\r\n\r\napp.UseAuthorization();\r\n\r\napp.MapControllers();\r\n\r\napp.Run();
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.API/Program.cs b/GoatEdu.API/Program.cs
--- a/GoatEdu.API/Program.cs	(revision a7e14be7a90ffe56de030272a14946a4fa7a2e66)
+++ b/GoatEdu.API/Program.cs	(date 1715993401378)
@@ -1,4 +1,5 @@
 using System.Text;
+using GoatEdu.API;
 using GoatEdu.Core.Interfaces;
 using GoatEdu.Core.Interfaces.GenericInterfaces;
 using GoatEdu.Core.Interfaces.RoleInterfaces;
@@ -19,16 +20,7 @@
 builder.Services.AddDbContext<GoatEduContext>(options =>
     options.UseNpgsql(builder.Configuration.GetConnectionString("DefaultConnection")));
 builder.Services.AddCors();
-builder.Services.AddScoped<IUserRepository, UserRepository>();
-builder.Services.AddScoped<IUserService, UserService>();
-builder.Services.AddScoped<IUnitOfWork, UnitOfWork>();
-builder.Services.AddScoped<IRoleRepository, RoleRepository>();
-
-
-builder.Services.AddScoped<JWTGenerator, JWTConfig>();
-
-builder.Services.AddScoped(typeof(IRepository<>), typeof(BaseRepository<>));
-
+builder.Services.AddWebAPIService();
 builder.Services.AddControllers();
 // builder.Services.AddAuthentication().AddGoogle(googleOptions =>
 // {
Index: GoatEdu.Core/Mappings/MapperConfigProfile.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.Core/Mappings/MapperConfigProfile.cs b/GoatEdu.Core/Mappings/MapperConfigProfile.cs
new file mode 100644
--- /dev/null	(date 1715993195412)
+++ b/GoatEdu.Core/Mappings/MapperConfigProfile.cs	(date 1715993195412)
@@ -0,0 +1,11 @@
+using AutoMapper;
+
+namespace GoatEdu.Core.Mappings;
+
+public class MapperConfigProfile : Profile
+{
+    public MapperConfigProfile()
+    {
+        
+    }
+}
\ No newline at end of file
Index: GoatEdu.Core/Interfaces/ClaimInterfaces/IClaimsService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.Core/Interfaces/ClaimInterfaces/IClaimsService.cs b/GoatEdu.Core/Interfaces/ClaimInterfaces/IClaimsService.cs
new file mode 100644
--- /dev/null	(date 1715991814285)
+++ b/GoatEdu.Core/Interfaces/ClaimInterfaces/IClaimsService.cs	(date 1715991814285)
@@ -0,0 +1,6 @@
+namespace GoatEdu.Core.Interfaces.ClaimInterfaces;
+
+public interface IClaimsService
+{
+    public int GetCurrentUserId {  get; }
+}
\ No newline at end of file
Index: GoatEdu.Core/Services/ClaimService.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.Core/Services/ClaimService.cs b/GoatEdu.Core/Services/ClaimService.cs
new file mode 100644
--- /dev/null	(date 1715991814818)
+++ b/GoatEdu.Core/Services/ClaimService.cs	(date 1715991814818)
@@ -0,0 +1,18 @@
+using System.Security.Claims;
+using GoatEdu.Core.Interfaces.ClaimInterfaces;
+using GoatEdu.Core.Interfaces.Security;
+using Microsoft.AspNetCore.Http;
+
+namespace GoatEdu.Core.Services;
+
+public class ClaimsService : IClaimsService
+{
+    public ClaimsService(IHttpContextAccessor httpContextAccessor)
+    {
+        // todo implementation to get the current userId
+        var identity = httpContextAccessor.HttpContext?.User?.Identity as ClaimsIdentity;
+        var extractedId = AuthenTools.GetCurrentAccountId(identity);
+        GetCurrentUserId = string.IsNullOrEmpty(extractedId) ? 0 : int.Parse(extractedId);
+    }
+    public int GetCurrentUserId { get; }
+}
\ No newline at end of file
Index: GoatEdu.Core/Security/AuthenTools.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.Core/Security/AuthenTools.cs b/GoatEdu.Core/Security/AuthenTools.cs
new file mode 100644
--- /dev/null	(date 1715991713394)
+++ b/GoatEdu.Core/Security/AuthenTools.cs	(date 1715991713394)
@@ -0,0 +1,16 @@
+using System.Security.Claims;
+
+namespace GoatEdu.Core.Interfaces.Security;
+
+public class AuthenTools
+{
+    public static string GetCurrentAccountId(ClaimsIdentity identity)
+    {
+        if (identity != null)
+        {
+            var userClaims = identity.Claims;
+            return userClaims.FirstOrDefault(x => x.Type == "http://schemas.xmlsoap.org/ws/2005/05/identity/claims/name")?.Value;
+        }
+        return null;
+    }
+}
\ No newline at end of file
Index: GoatEdu.Core/Interfaces/GenericInterfaces/ICurrentTime.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.Core/Interfaces/GenericInterfaces/ICurrentTime.cs b/GoatEdu.Core/Interfaces/GenericInterfaces/ICurrentTime.cs
new file mode 100644
--- /dev/null	(date 1715992126012)
+++ b/GoatEdu.Core/Interfaces/GenericInterfaces/ICurrentTime.cs	(date 1715992126012)
@@ -0,0 +1,6 @@
+namespace GoatEdu.Core.Interfaces.GenericInterfaces;
+
+public interface ICurrentTime
+{
+    public DateTime GetCurrentTime();
+}
\ No newline at end of file
Index: GoatEdu.Core/Services/CurrentTime.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.Core/Services/CurrentTime.cs b/GoatEdu.Core/Services/CurrentTime.cs
new file mode 100644
--- /dev/null	(date 1715992238727)
+++ b/GoatEdu.Core/Services/CurrentTime.cs	(date 1715992238727)
@@ -0,0 +1,11 @@
+using GoatEdu.Core.Interfaces.GenericInterfaces;
+
+namespace GoatEdu.Core.Services;
+
+public class CurrentTime : ICurrentTime
+{
+    public DateTime GetCurrentTime()
+    {
+        return DateTime.UtcNow.AddHours(7);
+    }
+}
\ No newline at end of file
Index: GoatEdu.Core/GoatEdu.Core.csproj
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><Project Sdk=\"Microsoft.NET.Sdk\">\r\n\r\n    <PropertyGroup>\r\n        <TargetFramework>net6.0</TargetFramework>\r\n        <ImplicitUsings>enable</ImplicitUsings>\r\n        <Nullable>enable</Nullable>\r\n    </PropertyGroup>\r\n    \r\n\r\n    <ItemGroup>\r\n      <Folder Include=\"Mappings\\\" />\r\n      <Folder Include=\"QueriesFilter\\\" />\r\n    </ItemGroup>\r\n\r\n    <ItemGroup>\r\n      <PackageReference Include=\"AutoMapper\" Version=\"13.0.1\" />\r\n      <PackageReference Include=\"BCrypt.Net-Next\" Version=\"4.0.3\" />\r\n      <PackageReference Include=\"Microsoft.AspNetCore.Authentication.JwtBearer\" Version=\"6.0.29\" />\r\n      <PackageReference Include=\"Microsoft.EntityFrameworkCore\" Version=\"6.0.29\" />\r\n      <PackageReference Include=\"Npgsql.EntityFrameworkCore.PostgreSQL\" Version=\"6.0.29\" />\r\n      <PackageReference Include=\"Npgsql.EntityFrameworkCore.PostgreSQL.Design\" Version=\"1.1.0\" />\r\n    </ItemGroup>\r\n\r\n</Project>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.Core/GoatEdu.Core.csproj b/GoatEdu.Core/GoatEdu.Core.csproj
--- a/GoatEdu.Core/GoatEdu.Core.csproj	(revision a7e14be7a90ffe56de030272a14946a4fa7a2e66)
+++ b/GoatEdu.Core/GoatEdu.Core.csproj	(date 1715993178201)
@@ -8,7 +8,6 @@
     
 
     <ItemGroup>
-      <Folder Include="Mappings\" />
       <Folder Include="QueriesFilter\" />
     </ItemGroup>
 
Index: GoatEdu.API/DI.cs
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/GoatEdu.API/DI.cs b/GoatEdu.API/DI.cs
new file mode 100644
--- /dev/null	(date 1715993201507)
+++ b/GoatEdu.API/DI.cs	(date 1715993201507)
@@ -0,0 +1,32 @@
+using GoatEdu.Core.Interfaces;
+using GoatEdu.Core.Interfaces.GenericInterfaces;
+using GoatEdu.Core.Interfaces.RoleInterfaces;
+using GoatEdu.Core.Interfaces.Security;
+using GoatEdu.Core.Interfaces.UserInterfaces;
+using GoatEdu.Core.Mappings;
+using GoatEdu.Core.Services;
+using Infrastructure.Repositories;
+
+namespace GoatEdu.API;
+
+public static class DI
+{
+    public static IServiceCollection AddWebAPIService(this IServiceCollection services)
+    {
+        // Repositories
+        services.AddScoped(typeof(IRepository<>), typeof(BaseRepository<>));
+        services.AddScoped<IUserRepository, UserRepository>();
+        services.AddScoped<IRoleRepository, RoleRepository>();
+        
+        
+        // Services
+        services.AddScoped<IUserService, UserService>();
+        
+        
+        // Others
+        services.AddScoped<IUnitOfWork, UnitOfWork>();
+        services.AddScoped<JWTGenerator, JWTConfig>();
+        services.AddAutoMapper(typeof(MapperConfigProfile).Assembly);
+        return services;
+    }
+}
\ No newline at end of file
